package DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import Modele.Utilisateurs;
import Service.UtilisateursService;

public class UtilisateursDAO implements UtilisateursService {
    //private DbConfigDAO dbInstance;
    private Connection connection;
    private DbConfigDAO dbInstance;



    public Utilisateurs getByEmail(String email) throws SQLException {
        Utilisateurs utilisateur = null;
        String query = "SELECT * FROM Utilisateurs WHERE email = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, email);
        ResultSet resultSet = preparedStatement.executeQuery();

        if (resultSet.next()) {
            // Créer un objet utilisateur à partir des données récupérées
            utilisateur = new Utilisateurs();
            utilisateur.setId_utilisateur(resultSet.getInt("id_utilisateur"));
            utilisateur.setNom(resultSet.getString("nom"));
            utilisateur.setPrenom(resultSet.getString("prenom"));
        }

        // Fermer les ressources
        resultSet.close();
        preparedStatement.close();

        return utilisateur;
    }

    public void add(Utilisateurs utilisateur) throws SQLException {
        String query = "INSERT INTO Utilisateurs (nom, prenom, email, password) VALUES (?, ?, ?, ?)";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, utilisateur.getNom());
        preparedStatement.setString(2, utilisateur.getPrenom());
        preparedStatement.setString(3, utilisateur.getEmail());
        preparedStatement.setString(4, utilisateur.getPassword());
        // Ajouter d'autres attributs selon votre modèle Utilisateurs

        preparedStatement.executeUpdate();

        preparedStatement.close();
    }

    @Override
    public Utilisateurs checkLogin(String email, String password) {
        Utilisateurs user = null;
        String query = "SELECT * FROM Utilisateurs WHERE email = ? AND password = ?";
        try (PreparedStatement preStat = connection.prepareStatement(query)) {
            preStat.setString(1, email);
            preStat.setString(2, password);
            try (ResultSet result = preStat.executeQuery()) {
                if (result.next()) {
                    int id_utilisateur = result.getInt("id_utilisateur");
                    String Nom = result.getString("Nom");
                    String Prenom = result.getString("Prenom");
                    String phone = result.getString("phone");
                    String typeCompte = result.getString("Type de compte");

                    user = new Utilisateurs(id_utilisateur, Nom, Prenom, phone, email, password, typeCompte);
                    user.setTypeCompte(typeCompte);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return user;
    }

    @Override
    public boolean isExist(String email, String password) {
        boolean exist = false;
        String query = "SELECT id_utilisateur FROM Utilisateurs WHERE email = ?";
        try (PreparedStatement preStat = connection.prepareStatement(query)) {
            preStat.setString(1, email);
            preStat.setString(2, password);
            try (ResultSet resultSet = preStat.executeQuery()) {
                exist = resultSet.next();
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return exist;
    }

    @Override
    public int register(Utilisateurs user) {
        int rowsInserted = 0;
        String query = "INSERT INTO Utilisateurs (Nom, Prenom, phone, email, password, TypeCompte, sexe, birthday) VALUES (?, ?, ?, ?, ?, ?,? ,?)";
        try (PreparedStatement preStat = connection.prepareStatement(query)) {
            preStat.setString(1, user.getNom());
            preStat.setString(2, user.getPrenom());
            preStat.setString(3, user.getPhone());
            preStat.setString(4, user.getEmail());
            preStat.setString(5, user.getPassword());
            preStat.setString(6, user.getTypeCompte());


            rowsInserted = preStat.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return rowsInserted;
    }
}
//
